services:

  app-instance-1:
    image: uniqueIDTracker-service
    container_name: app-instance-1
    ports:
      - "8081:8080"
    depends_on:
      - kafka
      - redis

  app-instance-2:
    image: uniqueIDTracker-service
    container_name: app-instance-2
    ports:
      - "8082:8080"
    depends_on:
      - kafka
      - redis

  app-instance-3:
    image: uniqueIDTracker-service
    container_name: app-instance-3
    ports:
      - "8083:8080"
    depends_on:
      - kafka
      - redis

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  kafka-2:
    image: bitnami/kafka:latest
    container_name: kafka-2
    ports:
      - "9093:9092"
    environment:
      - KAFKA_BROKER_ID=2
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-2:9093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  zookeeper:
    image: bitnami/zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app-instance-1
      - app-instance-2
      - app-instance-3